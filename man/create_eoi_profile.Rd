% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse_eoi.R
\name{create_eoi_profile}
\alias{create_eoi_profile}
\title{Create EOI Applicant Profile String}
\usage{
create_eoi_profile(applicant_data)
}
\arguments{
\item{applicant_data}{A list or a single-row data frame/tibble containing
the EOI data for one applicant. Expected to have specific named elements
corresponding to EOI form fields (e.g., \code{given_name}, \code{surname},
\code{preferred_units}, etc.).}
}
\value{
A character string representing the formatted applicant profile.
The profile is also printed to the console using \code{cat()}.
}
\description{
Generates a formatted string summarizing an applicant's Expression of
Interest (EOI) details. This is typically used for display or textual reports.
}
\examples{
\dontrun{
mock_applicant <- list(
  given_name = "Jane", surname = "Doe", title = "Dr",
  worked_at_usyd = "Yes", staff_id = "9876543",
  preferred_email = "jane.doe@example.com", preferred_contact = "0412345678",
  phd_conferred = "Yes",
  previous_demonstrator = "No", previous_units = NA, # or ""
  preferred_units = "DATA4001, COMP5002",
  desired_hours_per_week = "Up to 20",
  availability_monday = "Not available", availability_tuesday = "Full Day",
  availability_wednesday = "AM only", availability_thursday = "PM only",
  availability_friday = "Full Day",
  blockout_dates = "None",
  completed_training = "Yes, in 2022",
  lead_demonstrator_interest = "Maybe",
  lead_demonstrator_other = "Interested in curriculum development support",
  expertise_area = "Statistical Modeling, Bioinformatics",
  higher_education_degrees = "PhD (Statistics), BSc (Biology)",
  teaching_philosophy = "Student-centered and practical.",
  experience_benefit = "Industry experience in data analysis."
)
profile_string <- create_eoi_profile(mock_applicant)
# cat(profile_string) # To see the output as it would be printed

# Example with a data frame row
mock_applicant_df <- as.data.frame(mock_applicant)
profile_string_df <- create_eoi_profile(mock_applicant_df)
# cat(profile_string_df)
}
}
