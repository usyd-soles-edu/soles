% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_seams2_csv.R
\name{create_seams2_csv}
\alias{create_seams2_csv}
\title{Create a CSV file formatted for SEAMS2 section uploads}
\usage{
create_seams2_csv(
  data,
  output_filename = paste0(format(Sys.Date(), "\%Y\%m\%d"), "-seams2_upload.csv"),
  write_csv = TRUE
)
}
\arguments{
\item{data}{A data frame, typically the output from \code{merge_ap_extensions} or
\code{process_extensions}. It must contain at least the columns: \code{assessment},
\code{revised_due_date}, \code{outcome_type}, and \code{unikey}.}

\item{output_filename}{The desired name for the output CSV file. Defaults to
\code{"[YYYYMMDD]-seams2_upload.csv"}, where \verb{[YYYYMMDD]} is the current date.}

\item{write_csv}{Logical, whether to write the output data frame to a CSV file.
Defaults to \code{TRUE}.}
}
\value{
A \code{tibble} containing the data formatted for SEAMS2 upload.
The tibble includes columns "Section Id" (NA), "Section name",
"Student name" (NA), and "UniKey". Returns \code{NULL} if input validation fails
(e.g., missing columns, non-data frame input, date conversion issues).
If \code{write_csv} is \code{TRUE}, the function also attempts to write this data to
the specified CSV file (writing \code{NA} values as blank strings), logging
success or failure messages.
}
\description{
This function takes a data frame containing extension details and generates a
CSV file suitable for uploading to SEAMS2 to create Canvas sections based on
assessment, revised due date, and outcome type.
}
\examples{
\dontrun{
# Assuming 'processed_data' is the output from process_extensions()
# or merge_ap_extensions()
if (requireNamespace("logger", quietly = TRUE)) {
  logger::log_threshold(logger::INFO) # Set log level if using logger
}

# Create a dummy data frame for the example
dummy_data <- data.frame(
  assessment = c("Quiz1", "Assignment1", "Quiz1"),
  revised_due_date = as.Date(c("2024-05-15", "2024-06-01", NA)),
  outcome_type = c("Approved", NA, "Approved"),
  unikey = c("user123", "user456", "user789"),
  stringsAsFactors = FALSE
)

# Generate the SEAMS2 tibble and attempt to write the CSV
# (default filename with date)
seams2_tibble_write <- create_seams2_csv(dummy_data)
print("Generated tibble (CSV write attempted):")
print(head(seams2_tibble_write))

# Generate the tibble without writing to CSV
seams2_tibble_no_write <- create_seams2_csv(dummy_data, write_csv = FALSE)
print("Generated tibble (CSV write skipped):")
print(head(seams2_tibble_no_write))
}
}
